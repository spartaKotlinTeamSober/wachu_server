name: CD

on:
  workflow_dispatch:
  push:
    branches: [ feat/* ]
  pull_request:
    branches:
      - feat/#92-CICD

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > ./src/main/resources/application.yml
          find src

      - name: set embedding
        run: |
          mkdir -p ./data
          cp ./data/embedding-data.json.json ./data/embedding-data.json

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: gradlew bootJar
        run: ./gradlew bootJar

      # docker build & push to production
      - name: Docker build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/docker-dev .
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-dev

      ## deploy to develop
      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        with:
          host: ${{ secrets.SSH_HOST }} # EC2 퍼블릭 IPv4 DNS
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo docker ps
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-dev
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/docker-dev
            sudo docker image prune -f